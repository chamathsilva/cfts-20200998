AWSTemplateFormatVersion: '2010-09-09'
Description: 20200998 - CI/CD - Stack for DEV QA Prod(Blue/green) codepipeline
Parameters:
  ArtifactStoreS3bucket:
    Description: artifact store bucket for pipeline
    Default: codepipeline-us-east-1-90441170748
    Type: String
  GithubConnectionArn:
    Description : CodeStar source connection for Github (Version 2) 
    Default: arn:aws:codestar-connections:us-east-1:036710734874:connection/cd5351d0-c683-4dd6-8b24-297ab38e0ce3
    Type: String
  RepositoryId: 
    Description : The owner and name of the repository where source changes are to be detected (<account>/<repository-name>)
    Type: String
    Default : chamathsilva/coinbase-service-20200998
  BranchName:
    Description : The name of the branch where source changes are to be detected
    Type: String
    Default : main
  # CodePipelineRole:
  #   Description : ARN of the CodePipeline Role
  #   Type: String
  #   Default: arn:aws:iam::362392363900:role/service-role/test-bff-pipeline-role
  CodeBuildRole:
    Description : ARN of the CodeBuildRole Role
    Type: String
    Default: arn:aws:iam::036710734874:role/CodeBuildKubectlRole
  DevClusterName:
    Description : dev EKS Cluster name
    Type: String
    Default : coinbase-cluster-iit
  QaClusterName:
    Description : qa EKS Cluster name
    Type: String
    Default : coinbase-cluster-iit
  ProdClusterName:
    Description : prod EKS Cluster name
    Type: String
    Default : coinbase-cluster-iit

Resources:
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${AWS::StackName}-ecs-pipeline-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        -
          PolicyName: ecs-pipeline-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - codestar-connections:UseConnection
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifact
                  - servicecatalog:DescribeProvisioningArtifact
                  - servicecatalog:DeleteProvisioningArtifact
                  - servicecatalog:UpdateProduct
                  - cloudformation:ValidateTemplate
                  - ecr:DescribeImages
                  - states:DescribeExecution
                  - states:DescribeStateMachine
                  - states:StartExecution
                  - appconfig:StartDeployment
                  - appconfig:StopDeployment
                  - appconfig:GetDeployment
                Resource: "*"
              - 
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                    - cloudformation.amazonaws.com
                    - elasticbeanstalk.amazonaws.com
                    - ec2.amazonaws.com
                    - ecs-tasks.amazonaws.com
  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub ${AWS::StackName}-dev-codebuild
      Description: !Sub ${AWS::StackName}-dev-codebuild
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Cache:
        Type: LOCAL
        Modes: 
          - LOCAL_CUSTOM_CACHE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
  DevCodeDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub ${AWS::StackName}-dev-codedeploy
      Description: !Sub ${AWS::StackName}-dev-codedeploy
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Cache:
        Type: LOCAL
        Modes: 
          - LOCAL_CUSTOM_CACHE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-deploy.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ENV
            Value: 'dev'
          - Name: NAMESPACE
            Value: 'dev-coinbase-namespace'
          - Name : CLUSTER_NAME
            Value : !Ref DevClusterName
  QaCodeDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub ${AWS::StackName}-qa-codedeploy
      Description: !Sub ${AWS::StackName}-qa-codedeploy
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Cache:
        Type: LOCAL
        Modes: 
          - LOCAL_CUSTOM_CACHE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-deploy.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ENV
            Value: 'qa'
          - Name: NAMESPACE
            Value: 'qa-coinbase-namespace'
          - Name : CLUSTER_NAME
            Value : !Ref QaClusterName
  GreenCodeDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub ${AWS::StackName}-green-codedeploy
      Description: !Sub ${AWS::StackName}-green-codedeploy
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Cache:
        Type: LOCAL
        Modes: 
          - LOCAL_CUSTOM_CACHE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-deploy.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ENV
            Value: 'green'
          - Name: NAMESPACE
            Value: 'prod-coinbase-namespace'
          - Name : CLUSTER_NAME
            Value : !Ref ProdClusterName
  BlueGreenSwapCodeDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub ${AWS::StackName}-blue-green-swap-codedeploy
      Description: !Sub ${AWS::StackName}-blue-green-swap-codedeploy
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Cache:
        Type: LOCAL
        Modes: 
          - LOCAL_CUSTOM_CACHE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-blue-green-swap.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ENV
            Value: 'blue'
          - Name: NAMESPACE
            Value: 'prod-coinbase-namespace'
          - Name : CLUSTER_NAME
            Value : !Ref ProdClusterName
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3bucket
      RoleArn:
        !GetAtt CodePipelineRole.Arn
      Stages:
        - Name : Source
          Actions:
            - Name : source-action
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-source-artifact
              Configuration:
                ConnectionArn: !Ref GithubConnectionArn
                FullRepositoryId: !Ref RepositoryId
                BranchName: !Ref BranchName
                DetectChanges: true
              RunOrder: 1
        - Name : Build
          Actions:
            - Name : build-and-push-to-dev-ecr
              InputArtifacts:
                - Name: !Sub ${AWS::StackName}-source-artifact
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-dev-build-artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1
        - Name : DEV-deployment
          Actions:
            - Name : dev-deployment
              InputArtifacts:
                - Name: !Sub ${AWS::StackName}-dev-build-artifact
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-dev-deploy-artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DevCodeDeploy
              RunOrder: 1
        - Name : QA-deployment
          Actions:
            - Name : qa-deployment
              InputArtifacts:
                - Name: !Sub ${AWS::StackName}-dev-build-artifact
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-qa-deploy-artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref QaCodeDeploy
              RunOrder: 1
        - Name: Green-deployment-approval
          Actions:
            - Name : green-deployment-approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              RunOrder: 1
        - Name : Green-deployment
          Actions:
            - Name : green-deployment
              InputArtifacts:
                - Name: !Sub ${AWS::StackName}-dev-build-artifact
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-green-deploy-artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref GreenCodeDeploy
              RunOrder: 1
        - Name: Blue-green-swap-approval
          Actions:
            - Name : blue-green-swap-approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              RunOrder: 1
        - Name : Blue-green-swap-deployment
          Actions:
            - Name : blue-green-swap-deployment
              InputArtifacts:
                - Name: !Sub ${AWS::StackName}-dev-build-artifact
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-blue-green-swap-deploy-artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BlueGreenSwapCodeDeploy
              RunOrder: 1








